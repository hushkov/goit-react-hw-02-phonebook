{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","App.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","autoComplete","type","onChange","required","button","Component","ContactListItem","id","onDelete","contactItem","onClick","ContactList","contacts","map","Filter","label","filter","Section","title","children","App","initContacts","addNewContact","submitData","newContact","nanoid","preventSimilar","alert","deleteContact","contactID","handleFilter","eve","filteredList","normalizedQuery","toLowerCase","includes","newContactName","normalizedName","find","showFiltered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.688644cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1aXbV\",\"button\":\"ContactForm_button__MdwuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__Qo7XD\",\"button\":\"ContactListItem_button__2IbcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__znzzk\",\"label\":\"Filter_label__sjMkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3DGfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__31Bbp\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from 'Components/ContactForm/ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n        <h3>Did you already find a new friend?^^</h3>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from 'Components/ContactList/ContactListItem/ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {name}: {number}\r\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from 'Components/ContactList/ContactListItem/ContactListItem';\r\nimport s from 'Components/ContactList/ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          onDelete={onDelete}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from 'Components/Filter/Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from 'Components/ContactForm/ContactForm';\nimport ContactList from 'Components/ContactList/ContactList';\nimport Filter from 'Components/Filter/Filter';\nimport Section from 'Components/Section/Section';\nimport initContacts from 'db/initContacts.json';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: initContacts,\n    filter: '',\n  };\n\n  addNewContact = submitData => {\n    const { name, number } = submitData;\n\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    if (this.preventSimilar(name)) {\n      alert(`${name} is already in contacts^^`);\n    } else\n      this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n  };\n\n  deleteContact = contactID => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactID),\n    }));\n  };\n\n  handleFilter = eve => {\n    this.setState({ filter: eve.currentTarget.value });\n  };\n\n  filteredList = () => {\n    const { contacts, filter } = this.state;\n    const normalizedQuery = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedQuery),\n    );\n  };\n\n  preventSimilar = newContactName => {\n    const { contacts } = this.state;\n    const normalizedName = newContactName.toLowerCase();\n\n    return contacts.find(({ name }) =>\n      name.toLowerCase().includes(normalizedName),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const showFiltered = this.filteredList();\n\n    return (\n      <div className={s.App}>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addNewContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.handleFilter} />\n          <ContactList\n            contacts={filter ? showFiltered : contacts}\n            onDelete={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}